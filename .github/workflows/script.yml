name: Auto Version and Release

on:
  push:
    branches:
      - main

jobs:
  bump-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Current Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "::set-output name=latest_tag::$latest_tag"
          echo "::set-output name=tag::$(git describe --tags --abbrev=0)"
          echo "::set-output name=tag_without_v::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=tag_without_v_and_dot::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=major::$(echo ${GITHUB_REF#refs/tags/v} | cut -d. -f1)"
          echo "::set-output name=minor::$(echo ${GITHUB_REF#refs/tags/v} | cut -d. -f2)"
          echo "::set-output name=patch::$(echo ${GITHUB_REF#refs/tags/v} | cut -d. -f3)"

      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v4.0.0
        with:
          github_token: ${{ secrets.GH_PAT }}
          tag_template: 'yyyy.mm.dd.i'

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_release_tag.outputs.next_release_tag }}
          release_name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: V${{ steps.bump_version.outputs.new_version }}
          release_name: Release ${{ steps.bump_version.outputs.new_version }}
          body: |
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-package
          path: fiber-core

